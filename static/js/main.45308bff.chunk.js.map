{"version":3,"sources":["utils/cache.ts","utils/api.ts","hooks/useAppState.tsx","components/utils/poster.ts","components/Results.tsx","components/icons/magnifying-glass.svg","components/SearchBar.tsx","components/hooks/useSearch.ts","components/chart/constants.ts","components/chart/utils.ts","components/chart/x-axis.ts","components/chart/main-content.ts","components/chart/pan.ts","components/chart/gen.ts","components/chart/y-axis.ts","components/chart/tooltip.ts","components/icons/cycle.svg","components/InfoPanel.tsx","components/ChartWrapper.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["Cache","constructor","cache","this","populateCache","showsraw","localStorage","getItem","shows","JSON","parse","d","Date","setDate","getDate","omitBy","show","err","console","error","has","id","get","set","seasons","imdbID","added","getTime","info","setItem","stringify","omdb","axios","create","baseURL","interceptors","request","use","config","params","apikey","beuke","getSeasons","async","data","query","columns","rows","episodes","map","row","episode","forEach","val","i","sqlkey","KEY_MAP","season","parseInt","groupBy","Object","keys","seriesTitle","transformRows","tconst","parentTconst","seasonNumber","episodeNumber","episodeTitle","rating","votes","AppStateContext","createContext","selectShow","selectedShow","isLoading","Provider","children","useMemo","select","useState","setIsLoading","useCallback","totalSeasons","log","getShowInfo","finish","msg","alert","window","history","replaceState","useEffect","URLSearchParams","location","search","state","value","useAppState","useContext","hasPoster","url","toLowerCase","SearchResults","results","highlighted","highlightedRef","useRef","current","scrollIntoView","length","className","r","key","onClick","ref","Poster","src","alt","Title","Year","_extends","assign","target","arguments","source","prototype","hasOwnProperty","call","apply","_ref","createElement","_ref2","SvgMagnifyingGlass","svgRef","title","props","width","height","viewBox","undefined","ForwardRef","forwardRef","KEY_CODES","useSearch","term","setTerm","setResults","clear","resetTerm","type","s","Search","searchShows","debounced","debounce","cancel","onChange","e","bind","SearchBar","setHighlighted","displayResults","setDisplayResults","onFocus","onBlur","setTimeout","index","handler","keyCode","ESC","UP","ind","Math","max","DOWN","min","ENTER","document","addEventListener","removeEventListener","click","placeholder","autoFocus","calcChartValues","svgWidth","totalEpisodes","DOT_SPACING","items","dotSize","minSpacing","padding","calcSpacing","SIZE","RANGES","reduce","ranges","size","prev","push","generateRange","RANGES_NORMALIZED","band","RANGES_NORMALIZED_NO_LAST","slice","TOTAL_WIDTH","VERTICAL_LINE_ADJUST","getXY","xScale","yScale","getx","String","gety","COLORS","xAxisTextGetX","rangesNormalized","verticalLineAdjust","_","addXAxisText","selection","attr","text","addXAxisTicks","chartHeight","addDots","getColor","positionDots","createMainContent","container","group","append","linepath","d3","animate","values","domain","range","line","x","y","curve","generateLine","len","node","getTotalLength","style","transition","duration","ease","totalepisodes","selectAll","join","enter","update","ANIMATE_CONTENT_DURATION","delay","t","linecomplete","end","createGradient","defs","colors","gradient","createPan","svg","content","displayRightFade","displayLeftFade","leftFade","rightFade","display","createGradientFades","drag","zoom","initDrag","chartExtends","abs","scale","scaleExtent","translateExtent","on","transform","updateFade","raise","pointerStart","translateBy","preventDefault","override","translatedX","parseSvg","translateX","getEpisodes","flatMap","setupChart","updateTooltip","CHART_WIDTH","CHART_HEIGHT","getBoundingClientRect","svgYAxis","svgContent","VALUES","contentGroup","xaxis","svgContentWidth","tickSizeOuter","filter","remove","createYAxis","xAxisTicks","ticks","generate","exit","createXAxisTicks","xAxisLine","createXAxisLine","xAxisText","createXAxisText","mainContent","tooltip","overlay","disable","bisect","left","createTooltip","pan","reset","SvgCycle","link","href","rel","InfoPanel","imdbRating","Genre","Plot","GraphWrapper","chartRef","chart","formatEpisodeNumber","App","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.45308bff.chunk.js","sourcesContent":["import omitBy from 'lodash/omitBy'\nimport { ShowData, Season } from './types'\n\nconst STORAGE_KEY = 'shows'\n\nexport type Show = {\n\tinfo: ShowData\n\tseasons: Season[]\n}\n\ntype CacheType = {\n\t[imdbID: string]: {\n\t\tadded: number\n\t} & Show\n}\n\nexport default class Cache {\n\tprivate cache: CacheType = {}\n\n\tconstructor() {\n\t\tthis.populateCache()\n\t}\n\n\tprivate populateCache() {\n\t\tconst showsraw = localStorage.getItem(STORAGE_KEY)\n\n\t\tif (showsraw === null) return\n\t\ttry {\n\t\t\tconst shows = JSON.parse(showsraw)\n\n\t\t\tconst d = new Date()\n\t\t\tconst EXPIRED_DATE = d.setDate(d.getDate() - 5)\n\n\t\t\tthis.cache = omitBy(shows, show => {\n\t\t\t\t// older than n days, remove\n\t\t\t\treturn false\n\t\t\t\t// TODO - reenable\n\t\t\t\t// return show.added < EXPIRED_DATE\n\t\t\t})\n\t\t} catch (err) {\n\t\t\tconsole.error('error parsing cached shows', err)\n\t\t}\n\t}\n\n\thas(id: string) {\n\t\treturn id in this.cache\n\t}\n\n\tget(id: string) {\n\t\treturn this.cache[id]\n\t}\n\n\tset(show: ShowData, seasons: Season[]) {\n\t\tthis.cache[show.imdbID] = {\n\t\t\tadded: new Date().getTime(),\n\t\t\tinfo: show,\n\t\t\tseasons,\n\t\t}\n\t\tlocalStorage.setItem(STORAGE_KEY, JSON.stringify(this.cache))\n\t}\n}\n","import axios from 'axios'\nimport { ShowData, Season, Episode } from './types'\nimport groupBy from 'lodash/groupBy'\n\nconst API_KEY = 'ddf710b6'\n\nconst omdb = axios.create({\n\tbaseURL: 'http://www.omdbapi.com/',\n})\n\n// until new version is released - https://github.com/axios/axios/issues/2190\nomdb.interceptors.request.use(config => {\n\tconfig.params.apikey = API_KEY\n\treturn config\n})\n\nexport type SearchResult = {\n\tPoster: string\n\tTitle: string\n\tType: string\n\tYear: string\n\timdbID: string\n}\n\nexport const searchShows = async (term: string) => {\n\ttry {\n\t\tconst { data } = await omdb.get('', {\n\t\t\tparams: {\n\t\t\t\ttype: 'series',\n\t\t\t\ts: term,\n\t\t\t},\n\t\t})\n\t\tif (data && data.Search) {\n\t\t\treturn data.Search as SearchResult[]\n\t\t}\n\t} catch (err) {\n\t\tconsole.error('error searching', err)\n\t}\n\treturn []\n}\n\nexport const getShowInfo = async (id: string) => {\n\ttry {\n\t\tconst { data } = await omdb.get('', {\n\t\t\tparams: {\n\t\t\t\ti: id,\n\t\t\t},\n\t\t})\n\t\tdata.totalSeasons = parseInt(data.totalSeasons, 10)\n\t\treturn data as ShowData\n\t} catch (err) {\n\t\tconsole.log('error fetching show', err)\n\t}\n\treturn null\n}\n\n// --------- series queries\n\nconst query = (id: string) =>\n\t`series.json?sql=select+tconst,+parentTconst,+seasonNumber,+episodeNumber,+seriesTitle,+episodeTitle,+rating,+votes+from+series+where+\"parentTconst\"+=+\"${id}\"+order+by+CAST(seasonNumber+as+INT),+CAST(episodeNumber+as+INT)`\n\nconst beuke = axios.create({\n\tbaseURL: 'https://imdb.beuke.org/',\n})\n\nexport const getSeasons = async (id: string) => {\n\ttry {\n\t\tconst { data } = await beuke(query(id))\n\t\treturn transformRows(data.columns, data.rows)\n\t} catch (err) {\n\t\tconsole.error('error fetching episodes', err)\n\t}\n\treturn null\n}\n\ntype KeyMap = { [column: string]: keyof Episode2 }\nconst KEY_MAP: KeyMap = {\n\ttconst: 'seriesID',\n\tparentTconst: 'episodeID',\n\tseasonNumber: 'season',\n\tepisodeNumber: 'episode',\n\tseriesTitle: 'seriesTitle',\n\tepisodeTitle: 'episodeTitle',\n\trating: 'rating',\n\tvotes: 'votes',\n}\n\nfunction transformRows(columns: string[], rows: unknown[][]): Season[] {\n\t// convert sql rows into objects\n\tconst episodes = rows.map((row: unknown[]) => {\n\t\tconst episode = {} as Episode\n\t\trow.forEach((val: any, i: number) => {\n\t\t\tconst sqlkey = columns[i]\n\t\t\tconst key = KEY_MAP[sqlkey] || sqlkey\n\t\t\tepisode[key] = val\n\t\t})\n\t\treturn episode\n\t})\n\n\t// parse season + episode numbers\n\tepisodes.forEach(episode => {\n\t\tepisode.season = parseInt(episode.season, 10)\n\t\tepisode.episode = parseInt(episode.episode, 10)\n\t})\n\n\tconst seasons = groupBy(episodes, 'season')\n\n\treturn Object.keys(seasons).map(season => {\n\t\tconst episodes = seasons[season]\n\t\treturn {\n\t\t\tseriesTitle: episodes[0]?.seriesTitle || '',\n\t\t\tseason: parseInt(season),\n\t\t\tepisodes,\n\t\t} as Season\n\t})\n}\n","import React, {\n\tcreateContext,\n\tuseContext,\n\tuseMemo,\n\tuseState,\n\tuseCallback,\n\tuseEffect,\n} from 'react'\nimport Cache, { Show } from '../utils/cache'\nimport { getShowInfo, getSeasons } from '../utils/api'\n\nimport mock from '../components/chart/dev/mock/gen' // FOR TESTING\n\ntype ContextType = {\n\tselectShow: (id: string) => void\n\tselectedShow: Show | null\n\tisLoading: boolean\n}\n\nconst AppStateContext = createContext<ContextType>({\n\tselectShow: () => {},\n\tselectedShow: null,\n\tisLoading: false,\n})\n\nexport function Provider({ children }: { children: React.ReactNode }) {\n\tconst cache = useMemo(() => {\n\t\treturn new Cache()\n\t}, [])\n\n\tconst [selectedShow, select] = useState<Show | null>(null)\n\tconst [isLoading, setIsLoading] = useState(false)\n\n\tconst selectShow = useCallback(\n\t\tasync (id: string) => {\n\t\t\tsetIsLoading(true)\n\t\t\tif (!cache.has(id)) {\n\t\t\t\tconst show = await getShowInfo(id)\n\n\t\t\t\tif (show == null) {\n\t\t\t\t\treturn finish('failed to fetch show')\n\t\t\t\t}\n\n\t\t\t\tconst seasons = await getSeasons(id)\n\t\t\t\tif (seasons == null) {\n\t\t\t\t\treturn finish('failed to fetch seasons')\n\t\t\t\t}\n\n\t\t\t\t// cache\n\t\t\t\tcache.set(show, seasons)\n\t\t\t}\n\n\t\t\t// update app\n\t\t\twindow.history.replaceState('', '', `?id=${id}`)\n\t\t\tselect(cache.get(id))\n\t\t\tfinish()\n\n\t\t\tfunction finish(msg?: string) {\n\t\t\t\tif (msg) {\n\t\t\t\t\talert(msg)\n\t\t\t\t}\n\t\t\t\tsetIsLoading(false)\n\t\t\t}\n\t\t},\n\t\t[cache],\n\t)\n\n\t// support query params\n\tuseEffect(() => {\n\t\tconst params = new URLSearchParams(window.location.search)\n\t\tif (params.has('id')) {\n\t\t\tselectShow(params.get('id')!)\n\t\t}\n\t}, [selectShow])\n\n\t// FOR TESTING\n\t// useEffect(() => select(mock(10)), [])\n\n\tconst state = {\n\t\tselectShow,\n\t\tselectedShow,\n\t\tisLoading,\n\t}\n\n\treturn <AppStateContext.Provider value={state}>{children}</AppStateContext.Provider>\n}\n\nexport default function useAppState() {\n\treturn useContext(AppStateContext)\n}\n","export const hasPoster = (url: string) => url.toLowerCase() !== 'n/a'\n","import React, { useState, useEffect, useRef } from 'react'\nimport { SearchResult } from '../utils/api'\nimport { hasPoster } from './utils/poster'\n\ninterface Props {\n\tresults: SearchResult[] | null\n\thighlighted: number\n\tselect: (i: number) => void\n}\n\nexport default function SearchResults({ results, highlighted, select }: Props) {\n\tconst highlightedRef = useRef<HTMLLIElement>(null)\n\n\tuseEffect(() => {\n\t\thighlightedRef.current?.scrollIntoView(false)\n\t}, [highlighted])\n\n\tif (!results) {\n\t\treturn null\n\t}\n\n\tif (!results.length) {\n\t\treturn (\n\t\t\t<div className=\"search-results search-results__empty\">no results found</div>\n\t\t)\n\t}\n\n\treturn (\n\t\t<ul className=\"search-results\">\n\t\t\t{results.map((r, i) => (\n\t\t\t\t<li\n\t\t\t\t\tclassName={`search-result ${i === highlighted ? 'higlighted' : ''}`}\n\t\t\t\t\tkey={r.imdbID}\n\t\t\t\t\tonClick={() => select(i)}\n\t\t\t\t\tref={i === highlighted ? highlightedRef : null}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"search-result__poster\">\n\t\t\t\t\t\t{hasPoster(r.Poster) ? <img src={r.Poster} alt=\"poster\" /> : null}\n\t\t\t\t\t</div>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t{r.Title} <span className=\"search-result__year\">({r.Year})</span>\n\t\t\t\t\t</span>\n\t\t\t\t</li>\n\t\t\t))}\n\t\t</ul>\n\t)\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref = /*#__PURE__*/React.createElement(\"title\", null, \"magnifying-glass\");\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17.545 15.467l-3.779-3.779c0.57-0.935 0.898-2.035 0.898-3.21 0-3.417-2.961-6.377-6.378-6.377s-6.186 2.769-6.186 6.186c0 3.416 2.961 6.377 6.377 6.377 1.137 0 2.2-0.309 3.115-0.844l3.799 3.801c0.372 0.371 0.975 0.371 1.346 0l0.943-0.943c0.371-0.371 0.236-0.84-0.135-1.211zM4.004 8.287c0-2.366 1.917-4.283 4.282-4.283s4.474 2.107 4.474 4.474c0 2.365-1.918 4.283-4.283 4.283s-4.473-2.109-4.473-4.474z\"\n});\n\nconst SvgMagnifyingGlass = ({\n  svgRef,\n  title,\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends({\n  width: 20,\n  height: 20,\n  viewBox: \"0 0 20 20\",\n  ref: svgRef\n}, props), title === undefined ? _ref : title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n\nconst ForwardRef = React.forwardRef((props, ref) => /*#__PURE__*/React.createElement(SvgMagnifyingGlass, _extends({\n  svgRef: ref\n}, props)));\nexport default __webpack_public_path__ + \"static/media/magnifying-glass.f9737d3e.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState, useCallback, useEffect, useMemo, useRef } from 'react'\nimport SearchResults from './Results'\nimport { ReactComponent as SearchIcon } from './icons/magnifying-glass.svg'\nimport useSearch from './hooks/useSearch'\nimport useAppState from '../hooks/useAppState'\n\nenum KEY_CODES {\n\tUP = 38,\n\tDOWN = 40,\n\tENTER = 13,\n\tESC = 27,\n}\n\nexport default function SearchBar() {\n\tconst ref = useRef<HTMLInputElement>(null)\n\tconst { selectShow } = useAppState()\n\tconst { bind, setTerm, results } = useSearch()\n\n\tconst [highlighted, setHighlighted] = useState(-1)\n\tconst [displayResults, setDisplayResults] = useState(false)\n\n\t// if results change, display and reset highlighted\n\tuseEffect(() => {\n\t\tsetHighlighted(-1)\n\t\tsetDisplayResults(true)\n\t}, [results])\n\n\tconst onFocus = useCallback(() => {\n\t\tif (results) setDisplayResults(true)\n\t}, [results])\n\t// need to set timeout so blur doesn't trigger before results click\n\tconst onBlur = useCallback(e => setTimeout(() => setDisplayResults(false), 200), [])\n\n\tconst select = useCallback(\n\t\t(index: number) => {\n\t\t\tif (results && results[index]) {\n\t\t\t\tselectShow(results[index].imdbID)\n\t\t\t\tsetTerm('')\n\t\t\t}\n\t\t},\n\t\t[results, selectShow, setTerm],\n\t)\n\n\tuseEffect(() => {\n\t\tconst handler = (e: KeyboardEvent) => {\n\t\t\tswitch (e.keyCode) {\n\t\t\t\tcase KEY_CODES.ESC:\n\t\t\t\t\tsetDisplayResults(false)\n\t\t\t\t\tbreak\n\t\t\t\tcase KEY_CODES.UP:\n\t\t\t\t\tresults && setHighlighted(ind => Math.max(ind - 1, 0))\n\t\t\t\t\tbreak\n\t\t\t\tcase KEY_CODES.DOWN:\n\t\t\t\t\tif (results) {\n\t\t\t\t\t\tsetDisplayResults(true)\n\t\t\t\t\t\tsetHighlighted(ind => Math.min(ind + 1, results.length - 1))\n\t\t\t\t\t}\n\t\t\t\t\tbreak\n\t\t\t\tcase KEY_CODES.ENTER:\n\t\t\t\t\tselect(highlighted)\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\tdocument.addEventListener('keydown', handler, false)\n\t\treturn () => document.removeEventListener('keydown', handler, false)\n\t}, [highlighted, results, select, selectShow])\n\n\treturn (\n\t\t<>\n\t\t\t<header>\n\t\t\t\t<h1>Is it worth watching?</h1>\n\t\t\t</header>\n\t\t\t<div className=\"search-container\">\n\t\t\t\t<div className=\"search\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"search-bar__wrapper\"\n\t\t\t\t\t\tonClick={() => ref.current?.click()}\n\t\t\t\t\t>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t{...bind}\n\t\t\t\t\t\t\tref={ref}\n\t\t\t\t\t\t\tclassName=\"search-bar\"\n\t\t\t\t\t\t\tplaceholder=\"Search shows\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\tonFocus={onFocus}\n\t\t\t\t\t\t\tonBlur={onBlur}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className=\"search-bar__button\">\n\t\t\t\t\t\t\t<SearchIcon />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{displayResults && (\n\t\t\t\t\t\t<SearchResults\n\t\t\t\t\t\t\tresults={results}\n\t\t\t\t\t\t\thighlighted={highlighted}\n\t\t\t\t\t\t\tselect={select}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t)\n}\n","import React, { useCallback, useEffect, useState, useMemo } from 'react'\nimport debounce from 'lodash/debounce'\nimport { searchShows, SearchResult } from '../../utils/api'\n\nexport default function useSearch() {\n\tconst [term, setTerm] = useState('')\n\tconst [results, setResults] = useState<SearchResult[] | null>(null)\n\n\tconst clear = useCallback((resetTerm?: boolean) => {\n\t\tsetResults(null)\n\t\tif (resetTerm) setTerm('')\n\t}, [])\n\n\tconst search = useCallback(\n\t\tasync (term: string) => {\n\t\t\tclear()\n\t\t\tconst results = await searchShows(term)\n\t\t\tsetResults(results)\n\t\t},\n\t\t[clear],\n\t)\n\n\tconst debounced = useMemo(() => debounce(search, 700), [search])\n\n\tuseEffect(() => {\n\t\tif (term && term.length >= 2) {\n\t\t\tdebounced(term)\n\t\t\treturn () => debounced.cancel()\n\t\t} else {\n\t\t\tclear()\n\t\t}\n\t}, [clear, debounced, term])\n\n\tconst onChange = useCallback(e => {\n\t\tsetTerm(e.target.value)\n\t}, [])\n\n\treturn {\n\t\tbind: {\n\t\t\tvalue: term,\n\t\t\tonChange,\n\t\t},\n\t\tsetTerm,\n\t\tresults,\n\t}\n}\n","import { Season, Episode } from '../../utils/types'\n\nexport type SeasonSelectionType = d3.Selection<any, Season, SVGElement, any>\nexport type EpisodeSelectionType = d3.Selection<any, Episode, SVGElement, any>\nexport type RangeSelectionType = d3.Selection<any, number, SVGElement, any>\nexport type TransitionType = d3.Transition<SVGSVGElement, unknown, null, undefined>\nexport type D3Selection = d3.Selection<SVGGElement, unknown, null, undefined>\nexport type SvgSelection = d3.Selection<SVGSVGElement, unknown, null, undefined>\nexport type DivSelection = d3.Selection<HTMLDivElement, unknown, null, undefined>\n\nexport const DOT_SIZE = 5\nexport const MIN_SPACING = 10 // min spacing between dots\nexport const PADDING = 20 // left and right padding of line\n\nexport const ANIMATE_AXIS_DURATION = 750\nexport const ANIMATE_CONTENT_DURATION = 1200\n\nexport const CONTENT_ID = '#content'\n","import { Season, Episode } from '../../utils/types'\nimport { DOT_SIZE, MIN_SPACING, PADDING } from './constants'\n\n// returns range + 1\nconst generateRange = (seasons: Season[]) => {\n\treturn seasons.reduce(\n\t\t(ranges, season, i) => {\n\t\t\t// use last episode of season for full number of episodes in season\n\t\t\tconst size = season.episodes[season.episodes.length - 1].episode\n\t\t\tconst prev = ranges[i]\n\t\t\tranges.push(prev + size)\n\t\t\treturn ranges\n\t\t},\n\t\t[0],\n\t)\n}\n\ninterface CalcSpacingProps {\n\tsvgWidth: number\n\titems: number\n\tdotSize: number\n\tminSpacing: number\n\tpadding?: number\n}\nexport const calcSpacing = ({\n\titems,\n\tsvgWidth,\n\tdotSize,\n\tminSpacing,\n\tpadding = 0,\n}: CalcSpacingProps) =>\n\tMath.max(minSpacing, (svgWidth - padding * 2 - items * dotSize) / (items - 1))\n\nexport interface ChartValues {\n\tDOT_SPACING: number\n\tSIZE: number\n\tRANGES_NORMALIZED: number[]\n\tRANGES_NORMALIZED_NO_LAST: number[]\n\tTOTAL_WIDTH: number\n\tVERTICAL_LINE_ADJUST: number\n}\n\nexport const calcChartValues = (\n\tsvgWidth: number,\n\tseasons: Season[],\n\ttotalEpisodes: number,\n): ChartValues => {\n\tconst DOT_SPACING = calcSpacing({\n\t\titems: totalEpisodes,\n\t\tsvgWidth: svgWidth,\n\t\tdotSize: DOT_SIZE,\n\t\tminSpacing: MIN_SPACING,\n\t\tpadding: PADDING,\n\t})\n\tconst SIZE = DOT_SIZE + DOT_SPACING\n\n\tconst RANGES = generateRange(seasons)\n\tconst RANGES_NORMALIZED = RANGES.map(band => band * SIZE + PADDING)\n\tconst RANGES_NORMALIZED_NO_LAST = RANGES_NORMALIZED.slice(\n\t\t0,\n\t\tRANGES_NORMALIZED.length - 1,\n\t)\n\t// - DOT_SPACING since don't need right margin, + PADDING to account for right padding\n\tconst TOTAL_WIDTH = RANGES_NORMALIZED[RANGES.length - 1] - DOT_SPACING + PADDING\n\n\tconst VERTICAL_LINE_ADJUST = SIZE / 2\n\n\treturn {\n\t\tDOT_SPACING,\n\t\tSIZE,\n\t\tRANGES_NORMALIZED,\n\t\tRANGES_NORMALIZED_NO_LAST,\n\t\tTOTAL_WIDTH,\n\t\tVERTICAL_LINE_ADJUST,\n\t}\n}\n\nexport type GetXYReturn = ReturnType<typeof getXY>\nexport function getXY(xScale: any, yScale: any, size: number) {\n\treturn {\n\t\tgetx: (episode: Episode): number => {\n\t\t\treturn xScale(String(episode.season)) + (episode.episode - 1) * size\n\t\t},\n\t\tgety: (episode: Episode): number => yScale(episode.rating),\n\t}\n}\n\nconst COLORS = [\n\t'#9c27b0',\n\t'#3f51b5',\n\t'#2196f3',\n\t'#009688',\n\t'#8bc34a',\n\t'#ffc107',\n\t'#fb8c00',\n\t'#f33d38',\n\t// '#2c7bb6',\n\t// '#00a6ca',\n\t// '#00ccbc',\n\t// '#90eb9d',\n\t// '#ffff8c',\n\t// '#f9d057',\n\t// '#f29e2e',\n\t// '#e76818',\n\t// '#d7191c',\n]\nexport function getColor(i: number) {\n\treturn COLORS[i % COLORS.length]\n}\n","import { Season } from '../../utils/types'\nimport {\n\tSeasonSelectionType,\n\tRangeSelectionType,\n\tD3Selection,\n\tTransitionType,\n} from './constants'\nimport { ChartValues } from './utils'\n\nfunction xAxisTextGetX(rangesNormalized: number[], verticalLineAdjust: number) {\n\treturn (_, i) => {\n\t\tconst current = rangesNormalized[i + 1]\n\t\tconst prev = rangesNormalized[i]\n\t\treturn (current - prev) / 2 + prev - verticalLineAdjust\n\t}\n}\n\nfunction addXAxisText(\n\tselection: SeasonSelectionType,\n\trangesNormalized: number[],\n\tverticalLineAdjust: number,\n) {\n\treturn (\n\t\tselection\n\t\t\t.attr('class', 'x-axis-text')\n\t\t\t.text((season: Season) => `Season ${season.season}`)\n\t\t\t// .attr('y', 18)\n\t\t\t.attr('x', xAxisTextGetX(rangesNormalized, verticalLineAdjust))\n\t)\n}\n\nfunction addXAxisTicks(\n\tselection: RangeSelectionType,\n\tverticalLineAdjust: number,\n\tchartHeight: number,\n) {\n\treturn selection\n\t\t.attr('class', 'x-axis-season-line')\n\t\t.attr('y1', 0)\n\t\t.attr('y2', -chartHeight)\n\t\t.attr('x1', d => d - verticalLineAdjust)\n\t\t.attr('x2', d => d - verticalLineAdjust)\n}\n\nexport function createXAxisLine(xaxis: D3Selection) {\n\tconst xAxisLine = xaxis\n\t\t.append('line')\n\t\t.attr('class', 'x-axis-line')\n\t\t.attr('y1', 0)\n\t\t.attr('y2', 0)\n\t\t.attr('x1', 0)\n\n\treturn {\n\t\tgenerate(values: ChartValues) {\n\t\t\tconst { TOTAL_WIDTH } = values\n\t\t\txAxisLine.attr('x2', TOTAL_WIDTH)\n\t\t},\n\t\tupdate(values: ChartValues, t: TransitionType) {\n\t\t\tconst { TOTAL_WIDTH } = values\n\t\t\txAxisLine.transition(t).attr('x2', TOTAL_WIDTH)\n\t\t},\n\t}\n}\n\nexport function createXAxisText(xaxis: D3Selection) {\n\treturn {\n\t\tgenerate(values: ChartValues, seasons: Season[]) {\n\t\t\tconst { RANGES_NORMALIZED, VERTICAL_LINE_ADJUST } = values\n\t\t\txaxis\n\t\t\t\t.selectAll<any, Season>('text')\n\t\t\t\t.data(seasons, (season: Season) => String(season.season))\n\t\t\t\t.join('text')\n\t\t\t\t.call(addXAxisText, RANGES_NORMALIZED, VERTICAL_LINE_ADJUST)\n\t\t},\n\t\tupdate(\n\t\t\tvalues: ChartValues,\n\t\t\tCHART_HEIGHT: number,\n\t\t\tseasons: Season[],\n\t\t\tt: TransitionType,\n\t\t) {\n\t\t\tconst { RANGES_NORMALIZED, VERTICAL_LINE_ADJUST } = values\n\t\t\txaxis\n\t\t\t\t.selectAll<any, Season>('text')\n\t\t\t\t.data(seasons, (season: Season) => String(season.season))\n\t\t\t\t.join(\n\t\t\t\t\tenter =>\n\t\t\t\t\t\tenter\n\t\t\t\t\t\t\t.append('text')\n\t\t\t\t\t\t\t.call(addXAxisText, RANGES_NORMALIZED, VERTICAL_LINE_ADJUST)\n\t\t\t\t\t\t\t.style('opacity', 0),\n\t\t\t\t\tupdate => update,\n\t\t\t\t\texit => exit.transition(t).style('opacity', 0).remove(),\n\t\t\t\t)\n\t\t\t\t.transition(t)\n\t\t\t\t.attr('x', xAxisTextGetX(RANGES_NORMALIZED, VERTICAL_LINE_ADJUST))\n\t\t\t\t.style('opacity', 1)\n\t\t},\n\t}\n}\n\nexport function createXAxisTicks(xaxis: D3Selection) {\n\tconst ticks = xaxis.append('g').attr('id', 'x-divider-lines')\n\treturn {\n\t\tgenerate(values: ChartValues, CHART_HEIGHT: number) {\n\t\t\tconst { RANGES_NORMALIZED_NO_LAST, VERTICAL_LINE_ADJUST } = values\n\t\t\tticks\n\t\t\t\t.selectAll('line')\n\t\t\t\t.data(RANGES_NORMALIZED_NO_LAST.filter((_, i) => i !== 0))\n\t\t\t\t// .data(RANGES_NORMALIZED.filter((_, i) => i !== 0)) // FOR TESTING ONLY\n\t\t\t\t.join('line')\n\t\t\t\t.call(addXAxisTicks, VERTICAL_LINE_ADJUST, CHART_HEIGHT)\n\t\t},\n\t\tupdate(values: ChartValues, CHART_HEIGHT: number, t: TransitionType) {\n\t\t\tconst { RANGES_NORMALIZED_NO_LAST, VERTICAL_LINE_ADJUST } = values\n\t\t\tticks\n\t\t\t\t.selectAll('line')\n\t\t\t\t.data(RANGES_NORMALIZED_NO_LAST.filter((_, i) => i !== 0))\n\t\t\t\t// .data(RANGES_NORMALIZED.filter((_, i) => i !== 0)) // FOR TESTING ONLY\n\t\t\t\t.join(\n\t\t\t\t\tenter =>\n\t\t\t\t\t\tenter\n\t\t\t\t\t\t\t.append('line')\n\t\t\t\t\t\t\t.call(addXAxisTicks, VERTICAL_LINE_ADJUST, CHART_HEIGHT)\n\t\t\t\t\t\t\t.style('opacity', 0),\n\t\t\t\t\tupdate => update,\n\t\t\t\t\texit => exit.transition(t).style('opacity', 0).remove(),\n\t\t\t\t)\n\t\t\t\t.transition(t)\n\t\t\t\t.attr('x1', d => d - VERTICAL_LINE_ADJUST)\n\t\t\t\t.attr('x2', d => d - VERTICAL_LINE_ADJUST)\n\t\t\t\t.style('opacity', 1)\n\t\t},\n\t}\n}\n","import * as d3 from 'd3'\nimport { ChartValues, getColor, getXY } from './utils'\nimport { Season, Episode } from '../../utils/types'\nimport {\n\tD3Selection,\n\tDOT_SIZE,\n\tEpisodeSelectionType,\n\tANIMATE_CONTENT_DURATION,\n\tANIMATE_AXIS_DURATION,\n} from './constants'\n\nfunction generateLine(getx: any, gety: any, episodes: Episode[]) {\n\treturn d3.line().x(getx).y(gety).curve(d3.curveMonotoneX)(episodes as any)\n}\n\nfunction addDots(selection: EpisodeSelectionType) {\n\treturn selection\n\t\t.attr('class', 'dot')\n\t\t.attr('r', DOT_SIZE)\n\t\t.attr('fill', (episode: Episode) => getColor(episode.season))\n}\n\nfunction positionDots(selection: EpisodeSelectionType, getx: any, gety: any) {\n\treturn selection.attr('cx', getx).attr('cy', gety)\n}\n\nexport function createMainContent(\n\tcontainer: D3Selection,\n\tchartHeight: number,\n\tyScale: d3.ScaleLinear<number, number>,\n) {\n\tconst group = container.append('g').attr('id', 'main')\n\tconst linepath = group.append('path').attr('class', 'dot-line')\n\tconst xScale = d3.scaleOrdinal()\n\n\tasync function animate(values: ChartValues, seasons: Season[], episodes: Episode[]) {\n\t\tconst { RANGES_NORMALIZED_NO_LAST, SIZE } = values\n\n\t\txScale\n\t\t\t.domain(seasons.map(season => String(season.season)))\n\t\t\t.range(RANGES_NORMALIZED_NO_LAST)\n\n\t\tconst { getx, gety } = getXY(xScale, yScale, SIZE)\n\t\tconst line = generateLine(getx, gety, episodes)\n\t\tlinepath.attr('d', line)\n\t\tconst len = linepath.node()!.getTotalLength()\n\n\t\t// animate line\n\t\tlinepath\n\t\t\t// set empty stroke\n\t\t\t.attr('stroke-dasharray', len + ' ' + len)\n\t\t\t.attr('stroke-dashoffset', len)\n\t\t\t.style('opacity', 1)\n\t\t\t// draw in\n\t\t\t.transition()\n\t\t\t.duration(ANIMATE_CONTENT_DURATION)\n\t\t\t.ease(d3.easeLinear)\n\t\t\t.attr('stroke-dashoffset', 0)\n\n\t\t// animate dots\n\t\tconst totalepisodes = episodes.length\n\t\tgroup\n\t\t\t.selectAll<any, Episode>('.dot')\n\t\t\t.data(episodes, (episode: Episode) => String(episode.episode))\n\t\t\t.join(\n\t\t\t\tenter => enter.append('circle').call(addDots),\n\t\t\t\tupdate => update.call(addDots),\n\t\t\t)\n\t\t\t.call(positionDots, getx, gety)\n\t\t\t.style('opacity', 0)\n\t\t\t// fade in\n\t\t\t.transition()\n\t\t\t.duration(ANIMATE_CONTENT_DURATION / 10)\n\t\t\t.ease(d3.easeLinear)\n\t\t\t.delay((_, i) => (ANIMATE_CONTENT_DURATION / totalepisodes) * (i + 2))\n\t\t\t.style('opacity', 1)\n\t}\n\n\treturn {\n\t\tasync generate(values: ChartValues, seasons: Season[], episodes: Episode[]) {\n\t\t\tawait animate(values, seasons, episodes)\n\t\t},\n\t\tasync update(values: ChartValues, seasons: Season[], episodes: Episode[]) {\n\t\t\tconst t = container.transition().duration(ANIMATE_AXIS_DURATION) // TODO - used on group now instead of svg - ensure it works\n\n\t\t\t// hide line\n\t\t\tconst linecomplete = linepath.transition(t).style('opacity', 0).end()\n\t\t\t// hide dots\n\t\t\tgroup.selectAll('.dot').transition(t).style('opacity', 0)\n\n\t\t\tawait linecomplete\n\t\t\tawait animate(values, seasons, episodes)\n\t\t},\n\t\txScale,\n\t}\n}\n","import * as d3 from 'd3'\nimport { parseSvg } from 'd3-interpolate/src/transform/parse'\nimport { CONTENT_ID, D3Selection } from './constants'\nimport { ChartValues } from './utils'\nimport { createTooltip } from './tooltip'\nimport { Episode } from '../../utils/types'\n\nconst FADE_WIDTH = 100\nconst LEFT_FADE_GRADIENT_ID = 'left-fade-gradient'\nconst RIGHT_FADE_GRADIENT_ID = 'right-fade-gradient'\nconst FADE_BUFFER = 50\n\nfunction createGradient(defs: any, id: string, colors: [number, string, number][]) {\n\tconst gradient = defs.append('linearGradient').attr('id', id)\n\n\tgradient.attr('x1', '0%').attr('x2', '100%').attr('y1', '0%').attr('y2', '0%')\n\n\tgradient\n\t\t.selectAll('stop')\n\t\t.data(colors)\n\t\t.enter()\n\t\t.append('stop')\n\t\t.attr('offset', data => `${data[0]}%`)\n\t\t.attr('stop-color', data => data[1])\n\t\t.attr('stop-opacity', data => data[2])\n\n\treturn gradient\n}\n\nfunction createGradientFades(svg: D3Selection, chartHeight: number) {\n\tconst svgWidth = parseInt(svg.attr('width'), 10)\n\tconst defs = svg.append('defs')\n\n\tcreateGradient(defs, LEFT_FADE_GRADIENT_ID, [\n\t\t[0, 'white', 1],\n\t\t[20, 'white', 1],\n\t\t[100, 'white', 0],\n\t])\n\tcreateGradient(defs, RIGHT_FADE_GRADIENT_ID, [\n\t\t[0, 'white', 0],\n\t\t[80, 'white', 1],\n\t\t[100, 'white', 1],\n\t])\n\n\tconst leftFade = svg\n\t\t.append('rect')\n\t\t.attr('class', 'fade-rect right')\n\t\t.attr('x', -FADE_WIDTH)\n\t\t.attr('y', 0)\n\t\t.attr('width', FADE_WIDTH)\n\t\t.attr('height', chartHeight)\n\t\t.style('fill', `url(#${LEFT_FADE_GRADIENT_ID})`)\n\n\tconst rightFade = svg\n\t\t.append('rect')\n\t\t.attr('class', 'fade-rect right')\n\t\t.attr('x', svgWidth)\n\t\t.attr('y', 0)\n\t\t.attr('width', FADE_WIDTH)\n\t\t.attr('height', chartHeight)\n\t\t.style('fill', `url(#${RIGHT_FADE_GRADIENT_ID})`)\n\n\treturn {\n\t\tdisplayLeftFade(display: boolean) {\n\t\t\tif (display) {\n\t\t\t\tleftFade.transition().duration(500).attr('x', 0)\n\t\t\t} else {\n\t\t\t\tleftFade.transition().duration(500).attr('x', -FADE_WIDTH)\n\t\t\t}\n\t\t},\n\t\tdisplayRightFade(display: boolean) {\n\t\t\tif (display) {\n\t\t\t\trightFade\n\t\t\t\t\t.transition()\n\t\t\t\t\t.duration(500)\n\t\t\t\t\t.attr('x', svgWidth - FADE_WIDTH)\n\t\t\t} else {\n\t\t\t\trightFade.transition().duration(500).attr('x', svgWidth)\n\t\t\t}\n\t\t},\n\t}\n}\n\nexport default function createPan(svg: any, chartHeight: number, values: ChartValues) {\n\tconst content = svg.select(CONTENT_ID)\n\n\tconst { displayRightFade, displayLeftFade } = createGradientFades(svg, chartHeight)\n\n\tconst drag = d3.drag()\n\tconst zoom = d3.zoom()\n\n\tinitDrag(values)\n\n\tfunction initDrag(values: ChartValues) {\n\t\tconst { TOTAL_WIDTH } = values\n\t\tconst svgWidth = parseInt(svg.attr('width'), 10)\n\n\t\t// account for minor discrepancies in width\n\t\tconst chartExtends = Math.abs(svgWidth - TOTAL_WIDTH) > 15\n\t\tconst scale = chartExtends ? TOTAL_WIDTH / svgWidth + 1 : 1\n\t\tzoom.scaleExtent([1, scale])\n\t\t\t.translateExtent([\n\t\t\t\t[0, 0],\n\t\t\t\t[chartExtends ? TOTAL_WIDTH : svgWidth, 0],\n\t\t\t])\n\t\t\t.on('zoom', zoomed)\n\n\t\tdrag.on('start', dragstarted).on('drag', dragged).on('end', dragended)\n\t\tsvg.call(drag)\n\t\tsvg.call(zoom).on('wheel', () => {\n\t\t\td3.event.preventDefault()\n\t\t})\n\n\t\tupdateFade(0, true)\n\n\t\t// used to determine how far left/right panning from initial start point\n\t\tlet pointerStart = 0\n\t\tfunction dragstarted() {\n\t\t\tsvg.style('cursor', 'grabbing')\n\t\t\td3.select(this).raise()\n\n\t\t\tpointerStart = d3.event.x\n\t\t}\n\n\t\tfunction dragged() {\n\t\t\tconst delta = pointerStart - d3.event.x\n\t\t\tconst x = -delta\n\t\t\tpointerStart = d3.event.x\n\t\t\tzoom.translateBy(svg, x, 0)\n\t\t}\n\n\t\tfunction dragended() {\n\t\t\tsvg.style('cursor', '')\n\t\t}\n\n\t\tfunction zoomed() {\n\t\t\tconst x = Math.min(Math.max(d3.event.transform.x, svgWidth - TOTAL_WIDTH), 0)\n\t\t\tcontent.attr('transform', `translate(${x})`)\n\n\t\t\tupdateFade(x)\n\t\t}\n\n\t\tfunction updateFade(x: number, override?: boolean) {\n\t\t\tif (chartExtends || override) {\n\t\t\t\tconst translatedX = Math.abs(x)\n\t\t\t\tconst showRight = translatedX + svgWidth + FADE_BUFFER < TOTAL_WIDTH\n\t\t\t\tdisplayRightFade(showRight)\n\t\t\t\tconst showLeft = translatedX > FADE_BUFFER\n\t\t\t\tdisplayLeftFade(showLeft)\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {\n\t\tasync reset(values: ChartValues) {\n\t\t\t// if scrolled, reset to 0\n\t\t\tconst translatedX = getTranslateX(content)\n\t\t\tif (translatedX) {\n\t\t\t\tawait svg\n\t\t\t\t\t.transition()\n\t\t\t\t\t.duration(300)\n\t\t\t\t\t.call(zoom.translateBy, -translatedX, 0)\n\t\t\t\t\t.end()\n\t\t\t}\n\n\t\t\t// remove event listeners\n\t\t\tdrag.on('start', null).on('drag', null).on('end', null)\n\t\t\tsvg.on('wheel', null)\n\n\t\t\t// reset transform\n\t\t\tcontent.attr('transform', `translate(0)`)\n\n\t\t\t// re-add listeners\n\t\t\tinitDrag(values)\n\t\t},\n\t}\n}\n\nfunction getTranslateX(selection: any) {\n\treturn parseSvg(selection.attr('transform')).translateX\n}\n","import * as d3 from 'd3'\nimport flatMap from 'lodash/flatMap'\nimport { Season, Episode } from '../../utils/types'\nimport { calcChartValues } from './utils'\nimport { createXAxisTicks, createXAxisText, createXAxisLine } from './x-axis'\nimport { ANIMATE_AXIS_DURATION } from './constants'\nimport { createMainContent } from './main-content'\nimport { createYAxis } from './y-axis'\nimport createPan from './pan'\nimport { createTooltip, UpdateTooltipFn } from './tooltip'\n\nconst getEpisodes = (seasons: Season[]) => flatMap(seasons, 'episodes')\n\nexport function setupChart(\n\tref: HTMLElement,\n\tseasons: Season[],\n\tupdateTooltip: UpdateTooltipFn,\n) {\n\tconst episodes = getEpisodes(seasons)\n\n\t// TODO - add resize support\n\tconst { width: CHART_WIDTH, height: CHART_HEIGHT } = ref.getBoundingClientRect()\n\n\tconst svgYAxis = d3\n\t\t.select(ref)\n\t\t.append('svg')\n\t\t.attr('id', 'y-axis-svg')\n\t\t.attr('width', 1)\n\t\t.attr('height', CHART_HEIGHT)\n\n\tconst svgContent = d3\n\t\t.select(ref)\n\t\t.append('svg')\n\t\t.attr('id', 'content-svg')\n\t\t.attr('width', CHART_WIDTH)\n\t\t.attr('height', CHART_HEIGHT + 50)\n\n\t//  ---------------------------------------\n\n\tconst VALUES = calcChartValues(CHART_WIDTH, seasons, episodes.length)\n\n\t// x axis + content wrapper\n\tconst contentGroup = svgContent.append('g').attr('id', 'content')\n\n\t// x axis\n\tconst xaxis = contentGroup\n\t\t.append('g')\n\t\t.attr('transform', `translate(0, ${CHART_HEIGHT})`)\n\t\t.attr('id', 'x-axis')\n\n\t// create chart elements\n\tconst { yScale } = createYAxis(svgYAxis, CHART_HEIGHT, CHART_WIDTH)\n\tconst xAxisTicks = createXAxisTicks(xaxis)\n\tconst xAxisLine = createXAxisLine(xaxis)\n\tconst xAxisText = createXAxisText(xaxis)\n\tconst mainContent = createMainContent(contentGroup, CHART_HEIGHT, yScale)\n\tconst tooltip = createTooltip(\n\t\tcontentGroup,\n\t\tCHART_HEIGHT,\n\t\tmainContent.xScale,\n\t\tupdateTooltip,\n\t)\n\n\t/*\n\t\tTODO - remove generate method, should be part of `create...` constructor/init\n\t*/\n\n\t// draw chart\n\txAxisLine.generate(VALUES)\n\txAxisText.generate(VALUES, seasons)\n\txAxisTicks.generate(VALUES, CHART_HEIGHT)\n\tmainContent.generate(VALUES, seasons, episodes)\n\ttooltip.update(VALUES, episodes)\n\n\tconst pan = createPan(svgContent, CHART_HEIGHT, VALUES)\n\n\treturn {\n\t\tasync update(seasons: Season[]) {\n\t\t\tconst episodes = getEpisodes(seasons)\n\n\t\t\tconst VALUES = calcChartValues(CHART_WIDTH, seasons, episodes.length)\n\n\t\t\tawait pan.reset(VALUES)\n\n\t\t\tconst t = svgContent.transition().duration(ANIMATE_AXIS_DURATION)\n\n\t\t\t// update chart\n\t\t\txAxisLine.update(VALUES, t)\n\t\t\txAxisText.update(VALUES, CHART_HEIGHT, seasons, t)\n\t\t\txAxisTicks.update(VALUES, CHART_HEIGHT, t)\n\t\t\tawait mainContent.update(VALUES, seasons, episodes)\n\t\t\ttooltip.update(VALUES, episodes)\n\t\t},\n\t}\n}\n","import { ChartValues } from './utils'\nimport * as d3 from 'd3'\n\nexport function createYAxis(svg: any, chartHeight: number, svgContentWidth: number) {\n\tconst yScale = d3.scaleLinear().domain([0, 10]).range([chartHeight, 0])\n\n\tsvg.call(d3.axisLeft(yScale).tickSizeOuter(0))\n\t\t.selectAll('line')\n\t\t.attr('x2', svgContentWidth)\n\t\t.attr('class', (_, i: number) => (i === 8 ? 'y-tick-8' : 'y-tick'))\n\t\t.filter((_, i: number) => i === 0) // remove horizontal tick for 0\n\t\t.remove()\n\n\t// y axis text\n\tsvg.selectAll('text').attr('class', 'y-axis-text')\n\n\t// y axis line\n\tsvg.select('.domain').attr('class', 'y-axis-line')\n\n\t// label\n\t// svg.append('text')\n\t// \t.attr('class', 'y-axis-label')\n\t// \t.text('Rating')\n\t// \t.attr('transform', 'rotate(-90)')\n\t// \t.style('text-anchor', 'middle')\n\t// \t.attr('y', 0)\n\t// \t.attr('x', -chartHeight / 2)\n\t// \t.attr('dy', -36)\n\n\treturn {\n\t\tyScale,\n\t}\n}\n","import * as d3 from 'd3'\nimport { ChartValues, getXY } from './utils'\nimport { Episode } from '../../utils/types'\nimport { SvgSelection, PADDING, DivSelection, D3Selection } from './constants'\nimport { bisector } from 'd3'\n\nexport type UpdateTooltipFn = (e: Episode | null) => void\n\nfunction createLine(content: D3Selection) {\n\tconst line = content\n\t\t.append('line')\n\t\t.attr('y1', 0)\n\t\t.attr('y2', 500)\n\t\t.attr('x1', 0)\n\t\t.attr('x2', 0)\n\t\t.attr('stroke', '#ddd')\n\n\treturn {\n\t\tupdate(x?: number) {\n\t\t\tif (x) {\n\t\t\t\tline.attr('x1', x).attr('x2', x).style('opacity', 1)\n\t\t\t} else {\n\t\t\t\tline.style('opacity', 0)\n\t\t\t}\n\t\t},\n\t}\n}\n\nexport function createTooltip(\n\tcontent: D3Selection,\n\tchartHeight: number,\n\txScale: any,\n\tupdateTooltip: UpdateTooltipFn,\n) {\n\tconst overlay = content\n\t\t.append('rect')\n\t\t.attr('id', 'tooltip-overlay')\n\t\t.attr('x', 0)\n\t\t.attr('y', 0)\n\t\t.attr('height', chartHeight)\n\n\t// const line = createLine(content)\n\t// const tooltip = _createTooltip(content)\n\n\tfunction update(values: ChartValues, episodes: Episode[]) {\n\t\tconst { TOTAL_WIDTH, RANGES_NORMALIZED, SIZE, VERTICAL_LINE_ADJUST } = values\n\t\tconst { getx } = getXY(xScale, null, values.SIZE)\n\n\t\t// update width\n\t\toverlay.attr('width', TOTAL_WIDTH)\n\n\t\t// create bisector\n\t\tconst bisect = d3.bisector((episode: Episode, x: number) => {\n\t\t\t// - VERTICAL_LINE_ADJUST + values.SIZE to account for bisector left\n\t\t\tconst episodex = getx(episode) - VERTICAL_LINE_ADJUST + values.SIZE\n\t\t\treturn episodex - x\n\t\t}).left\n\n\t\t// add listeners\n\t\toverlay\n\t\t\t.on('mousemove', function mousemove(e) {\n\t\t\t\t// get mouse x\n\t\t\t\tconst m = d3.mouse(this)\n\t\t\t\tconst x = m[0]\n\n\t\t\t\t// find episode\n\t\t\t\tconst i = bisect(episodes, x)\n\t\t\t\tconst episode = episodes[i] || null\n\n\t\t\t\t// update\n\t\t\t\tupdateTooltip(episode)\n\t\t\t\t// updateTooltip(episode, episode ? getx(episode) : 0)\n\t\t\t\t// line.update(episode ? getx(episode) : undefined)\n\t\t\t})\n\t\t\t.on('mouseout', () => {\n\t\t\t\tupdateTooltip(null)\n\t\t\t})\n\t}\n\n\treturn {\n\t\tdisable() {\n\t\t\tupdateTooltip(null)\n\t\t\toverlay.on('mousemove', null).on('mouseout', null)\n\t\t},\n\t\tupdate,\n\t}\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref = /*#__PURE__*/React.createElement(\"title\", null, \"cycle\");\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M5.516 14.224c-2.262-2.432-2.222-6.244 0.128-8.611 0.962-0.969 2.164-1.547 3.414-1.736l-0.069-2.077c-1.755 0.213-3.452 0.996-4.797 2.351-3.149 3.17-3.187 8.289-0.123 11.531l-1.741 1.752 5.51 0.301-0.015-5.834-2.307 2.323zM12.163 2.265l0.015 5.834 2.307-2.322c2.262 2.434 2.222 6.246-0.128 8.611-0.961 0.969-2.164 1.547-3.414 1.736l0.069 2.076c1.755-0.213 3.452-0.996 4.798-2.35 3.148-3.172 3.186-8.291 0.122-11.531l1.741-1.754-5.51-0.3z\"\n});\n\nconst SvgCycle = ({\n  svgRef,\n  title,\n  ...props\n}) => /*#__PURE__*/React.createElement(\"svg\", _extends({\n  width: 20,\n  height: 20,\n  viewBox: \"0 0 20 20\",\n  ref: svgRef\n}, props), title === undefined ? _ref : title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n\nconst ForwardRef = React.forwardRef((props, ref) => /*#__PURE__*/React.createElement(SvgCycle, _extends({\n  svgRef: ref\n}, props)));\nexport default __webpack_public_path__ + \"static/media/cycle.1365e1e5.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\nimport useAppState from '../hooks/useAppState'\nimport { hasPoster } from './utils/poster'\n\n/*\n\tfeatures:\n\t- name + year\n\t- link + rating\n\t- genres\n\t- best season\n\t- trend\n\t\t- starts strong, doing worse recently\n\t- worth watching?\n\t\t- if over 8 average?\n\t\t- if last 2 seasons average at least 7.5? if at least x seasons?\n\t- options:\n\t\t- show show average\n\t\t- display episode indicator/line\n*/\n\nconst link = (id: string) => ({\n\thref: `https://www.imdb.com/title/${id}`,\n\ttarget: '_blank',\n\trel: 'noopener noreferrer',\n})\n\nexport default function InfoPanel() {\n\tconst { selectedShow } = useAppState()\n\tconst { info, seasons } = selectedShow!\n\n\treturn (\n\t\t<div className=\"info-panel\">\n\t\t\t<div className=\"info-panel__left\">\n\t\t\t\t<a {...link(info.imdbID)} className=\"info-panel__poster\">\n\t\t\t\t\t{hasPoster(info.Poster) ? (\n\t\t\t\t\t\t<img src={info.Poster} alt=\"poster\" />\n\t\t\t\t\t) : null}\n\t\t\t\t</a>\n\n\t\t\t\t<div className=\"info-panel__rating\">\n\t\t\t\t\t{info.imdbRating} <span>/ 10</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"info-panel__right\">\n\t\t\t\t<a {...link(info.imdbID)} className=\"info-panel__title\">\n\t\t\t\t\t{info.Title} <span>({info.Year})</span>\n\t\t\t\t</a>\n\t\t\t\t<div className=\"info-panel__genre\">{info.Genre}</div>\n\t\t\t\t<div className=\"info-panel__plot\">{info.Plot}</div>\n\t\t\t\t<div className=\"info-panel__seasons\">\n\t\t\t\t\t{seasons.length} season{seasons.length === 1 ? '' : 's'}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n","import React, { useRef, useEffect, useState } from 'react'\nimport useAppState from '../hooks/useAppState'\nimport { setupChart } from './chart/gen'\nimport { Episode } from '../utils/types'\nimport { ReactComponent as CycleIcon } from './icons/cycle.svg'\nimport InfoPanel from './InfoPanel'\n\nimport DevShows from './chart/dev/shows' // FOR TESTING\n\ntype ChartType = ReturnType<typeof setupChart>\n\nconst formatEpisodeNumber = (season: number, episode: number) => {\n\tconst e = ('0' + episode).slice(-2)\n\tconst s = ('0' + season).slice(-2)\n\treturn `S${s}E${e}`\n}\n\nexport default function GraphWrapper() {\n\tconst { selectedShow, isLoading } = useAppState()\n\tconst chartRef = useRef<HTMLDivElement | null>(null)\n\tconst chart = useRef<ChartType>(null)\n\tconst [tooltip, updateTooltip] = useState<Episode | null>(null)\n\n\tfunction createChart(node: HTMLDivElement) {\n\t\tif (node && !chart.current) {\n\t\t\tconsole.log(selectedShow)\n\t\t\tchart.current = setupChart(node, selectedShow!.seasons, updateTooltip)\n\t\t}\n\t\tchartRef.current = node\n\t}\n\n\tuseEffect(() => {\n\t\tif (selectedShow && chart.current) {\n\t\t\tchart.current.update(selectedShow.seasons)\n\t\t}\n\t}, [selectedShow])\n\n\tif (!selectedShow) {\n\t\treturn null\n\t}\n\n\treturn (\n\t\t<div className=\"chart__container\">\n\t\t\t{/* title + tooltip */}\n\t\t\t<div className=\"chart__title\">\n\t\t\t\t<h2>\n\t\t\t\t\t{selectedShow.info.Title} <span>({selectedShow.info.Year})</span>\n\t\t\t\t</h2>\n\t\t\t\t<div className=\"chart__episode\">\n\t\t\t\t\t{tooltip && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<span className=\"chart__episode-number\">\n\t\t\t\t\t\t\t\t{formatEpisodeNumber(tooltip.season, tooltip.episode)}:\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span className=\"chart__episode-name\">\n\t\t\t\t\t\t\t\t{tooltip.episodeTitle}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span className=\"chart__episode-rating\">\n\t\t\t\t\t\t\t\t{tooltip.rating} / 10\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t{/* chart */}\n\t\t\t<div\n\t\t\t\tclassName={`chart__wrapper ${isLoading ? 'loading' : ''}`}\n\t\t\t\tref={createChart}\n\t\t\t>\n\t\t\t\t{isLoading && (\n\t\t\t\t\t<span className=\"chart__loading\">\n\t\t\t\t\t\t<CycleIcon />\n\t\t\t\t\t</span>\n\t\t\t\t)}\n\t\t\t</div>\n\n\t\t\t{/* info panel */}\n\t\t\t<InfoPanel />\n\n\t\t\t{/* for testing */}\n\t\t\t{/* <DevShows /> */}\n\t\t</div>\n\t)\n}\n","import React from 'react'\nimport { Provider } from './hooks/useAppState'\nimport SearchBar from './components/SearchBar'\nimport ChartWrapper from './components/ChartWrapper'\n\nfunction App() {\n\treturn (\n\t\t<Provider>\n\t\t\t<SearchBar />\n\t\t\t<ChartWrapper />\n\t\t</Provider>\n\t)\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/main.scss'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}